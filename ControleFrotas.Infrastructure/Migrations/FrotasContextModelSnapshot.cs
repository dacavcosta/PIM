// <auto-generated />
using System;
using ControleFrotas.Infrastructure.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ControleFrotas.Infrastructure.Migrations
{
    [DbContext(typeof(FrotasContext))]
    partial class FrotasContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ControleFrotas.Domain.Model.Abastecimento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Combustivel");

                    b.Property<DateTime>("Data");

                    b.Property<int>("Kilometragem");

                    b.Property<double>("Litros");

                    b.Property<DateTime>("Responsavel");

                    b.Property<int>("VeiculoId");

                    b.HasKey("Id");

                    b.HasIndex("VeiculoId");

                    b.ToTable("Abastecimentos");
                });

            modelBuilder.Entity("ControleFrotas.Domain.Model.CNH", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Categoria");

                    b.Property<int>("ColaboradorId");

                    b.Property<int>("Numero");

                    b.Property<int>("Registro");

                    b.Property<DateTime>("Validade");

                    b.HasKey("Id");

                    b.HasIndex("ColaboradorId")
                        .IsUnique();

                    b.ToTable("CNHs");
                });

            modelBuilder.Entity("ControleFrotas.Domain.Model.Colaborador", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CPF");

                    b.Property<int>("Categoria");

                    b.Property<string>("Endereco");

                    b.Property<string>("Nome")
                        .IsRequired();

                    b.Property<string>("Rg")
                        .IsRequired();

                    b.Property<int>("Telefone");

                    b.Property<DateTime>("Vencimento");

                    b.HasKey("Id");

                    b.ToTable("Colaboradores");
                });

            modelBuilder.Entity("ControleFrotas.Domain.Model.Manutencao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Data");

                    b.Property<string>("Descricao");

                    b.Property<string>("Responsavel")
                        .IsRequired();

                    b.Property<int>("VeiculoId");

                    b.HasKey("Id");

                    b.HasIndex("VeiculoId");

                    b.ToTable("Manutencoes");
                });

            modelBuilder.Entity("ControleFrotas.Domain.Model.Peca", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ManutencaoId");

                    b.Property<string>("Nome")
                        .IsRequired();

                    b.Property<int>("QuantidadeEstoque");

                    b.Property<string>("Veiculo");

                    b.HasKey("Id");

                    b.HasIndex("ManutencaoId");

                    b.ToTable("Pecas");
                });

            modelBuilder.Entity("ControleFrotas.Domain.Model.Reserva", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ColaboradorId");

                    b.Property<DateTime>("DataSolicitacao");

                    b.Property<string>("Destino")
                        .IsRequired();

                    b.Property<string>("FimDestino");

                    b.Property<int>("QuantidadePassageiros");

                    b.HasKey("Id");

                    b.HasIndex("ColaboradorId");

                    b.ToTable("Reservas");
                });

            modelBuilder.Entity("ControleFrotas.Domain.Model.Uso", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Autorizacao")
                        .IsRequired();

                    b.Property<int>("ColaboradorId");

                    b.Property<string>("Destino")
                        .IsRequired();

                    b.Property<int>("KmFinal");

                    b.Property<int>("KmInicial");

                    b.Property<string>("Relatorio");

                    b.Property<DateTime>("Retorno");

                    b.Property<DateTime>("Saida");

                    b.Property<int>("VeiculoId");

                    b.HasKey("Id");

                    b.HasIndex("ColaboradorId");

                    b.HasIndex("VeiculoId");

                    b.ToTable("Usos");
                });

            modelBuilder.Entity("ControleFrotas.Domain.Model.Veiculo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Abastecimento");

                    b.Property<int>("Ano");

                    b.Property<string>("Cor");

                    b.Property<string>("Marca")
                        .IsRequired();

                    b.Property<string>("Modelo")
                        .IsRequired();

                    b.Property<string>("NumeroChassi")
                        .IsRequired();

                    b.Property<string>("Placa");

                    b.Property<int>("QuantidadePortas");

                    b.Property<string>("Renavam")
                        .IsRequired();

                    b.Property<int>("Status");

                    b.Property<int>("Tipo");

                    b.Property<int>("TipoCombustivel");

                    b.HasKey("Id");

                    b.ToTable("Veiculos");
                });

            modelBuilder.Entity("ControleFrotas.Domain.Model.Abastecimento", b =>
                {
                    b.HasOne("ControleFrotas.Domain.Model.Veiculo", "Veiculo")
                        .WithMany("Abastecimentos")
                        .HasForeignKey("VeiculoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ControleFrotas.Domain.Model.CNH", b =>
                {
                    b.HasOne("ControleFrotas.Domain.Model.Colaborador", "Colaborador")
                        .WithOne("CNH")
                        .HasForeignKey("ControleFrotas.Domain.Model.CNH", "ColaboradorId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ControleFrotas.Domain.Model.Manutencao", b =>
                {
                    b.HasOne("ControleFrotas.Domain.Model.Veiculo", "Veiculo")
                        .WithMany("Manutencoes")
                        .HasForeignKey("VeiculoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ControleFrotas.Domain.Model.Peca", b =>
                {
                    b.HasOne("ControleFrotas.Domain.Model.Manutencao", "Manutencao")
                        .WithMany("Pecas")
                        .HasForeignKey("ManutencaoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ControleFrotas.Domain.Model.Reserva", b =>
                {
                    b.HasOne("ControleFrotas.Domain.Model.Colaborador", "Colaborador")
                        .WithMany("Reservas")
                        .HasForeignKey("ColaboradorId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ControleFrotas.Domain.Model.Uso", b =>
                {
                    b.HasOne("ControleFrotas.Domain.Model.Colaborador", "Colaborador")
                        .WithMany("Usos")
                        .HasForeignKey("ColaboradorId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ControleFrotas.Domain.Model.Veiculo", "Veiculo")
                        .WithMany("Usos")
                        .HasForeignKey("VeiculoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
